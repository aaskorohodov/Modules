"""
Метод __new__ вызывается перед созданием экземпляра класса.

1. сначала идет __new__
2. создается экземпляр
3. вызывается __init__ (если переписан)

__new__ возвращает адрес нового созданного объекта, если этого не сделать, то объектом будет None, потому что если
__new__ ничего не вернул, то None.
Необязательно прописывать это руками, так как все классы в Python наследуются от базового object, в котором уже есть
__new__. Поэтому можно сделать так:
"""


class Point:
    def __new__(cls, *args, **kwargs):
        print("вызов __new__ для " + str(cls))
        return super().__new__(cls)


a = Point()

'''cls = ссылка на текущий класс Point, args и kwargs не нужны, но их лучше принять, ведь дальше может пойти __init__,
который потребует каких-то переменных, а при создании экземпляра (если он создается с переменными a = Point(1,2))
переменные передаются и в __new__ и в __init__.'''
