import numpy as np


# есть две матрицы, обе квадратные (2 строчки, 2 столбца)
a = np.array([(1, 2), (3, 4)])
b = np.array([(5, 6), (7, 8)])

# объединить можно поставив их сбоку друг от друга или друг на друга (столбиком)
print(np.hstack([a, b]))
print(np.vstack([a, b]))


# создаем еще 2 массива и задаем им разменость
a = np.fromiter(range(18), dtype='int32')
b = np.fromiter(range(18, 36), dtype='int32')
a.resize(3, 3, 2)
b.resize(3, 3, 2)

c = np.hstack([a, b])  # размерность 3x6x2
d = np.vstack([a, b])  # размерность 6x3x2



# еще 2 массива
a = np.fromstring('1 2 3 4', sep = ' ')
b = np.fromstring('5 6 7 8', sep = ' ')
c = np.hstack([a, b])  # вектор, потому что два вектора вытянулись в более длинный
d = np.vstack([a, b])  # двумерный массив, потому что один вектор встал на другой

'''Если хочется повернуть вектора вертикально, а затем сложит боками (две пирамидки по 2 элемента на строчку), то:'''

e = np.column_stack([a, b])  # 4x2


# еще 2 массива
a = np.arange(1, 13)
b = np.arange(13, 26)
a.resize(3, 3, 2)  # почти квадрат, только тонкий
b.resize(3, 3, 2)

'''Указываем что склеить, и по какой оси'''
c0 = np.concatenate([a, b], axis=0) # размерность 6x3x2
c1 = np.concatenate([a, b], axis=1) # размерность 3x6x2
c2 = np.concatenate([a, b], axis=2) # размерность 3x3x4


'''r_ объединяет (или создает) массивы из разных элементов или из других массивов'''

np.r_[ [1, 2, 3], 4, 5]  # список + дополнительные элементы
np.r_[ 1:9, 90, 100]  # срез + два элемента
np.r_[ np.array([1,2,3]), np.array([4,5,6])]  # объединение двух массивов
np.r_[ [(1,2,3), (4,5,6)], [(7,8,9)] ]  # объединение двумерного и одномерного списков

'''с_ работает аналогично, только создает массив по вертикали, тогда как r_ по горизонтали (или делает вектора)'''
print(np.c_[1:5])
np.c_[ [1, 2, 3], [4, 5, 6]]
np.c_[ [(1,2,3), (4,5,6)], [[7],[8]] ]