import numpy as np


'''Двумерный массив можно скармливать как индексы. На выходе получим двумерный массив (аналог того, что был индексами)
, но заполненный значениями = индексы (а скормим мы это одномерному массиву)'''

a = np.arange(1, 9)
i = np.array([[0, 1], [2, 3]])
a[i]  # array([[1, 2], [3, 4]])
# Те индексный массив определяет не только элементы, который мы будем брать, но и формы массива на выходе


'''Если делать наоборот, брать двумерный массив и давать одномерные индексы, то мы получим строки. Те индексы
укажут на всю строку целиком:'''
a = np.arange(1, 13).reshape(3, 4)
indx = [2, 1, 0]
print(a[indx], '\n')

# [[ 9 10 11 12]
#  [ 5  6  7  8]
#  [ 1  2  3  4]]


'''Если давать индексы двумерным массивом, двумерному же массиву, то мы получим трехмерный массив. Потому что индексами
мы показываем, какой вид массива хотим получить (двумерный), какие строки хотим получить из исходного массива,
и эти строки пакуются в двумерный массив. Но строки одномерный массив (вектор), так что мы получаем трехмерный массив.'''
indx = np.array([[1, 0], [2, 1]])
print(a[indx].shape)

# [[[ 5  6  7  8]
#   [ 1  2  3  4]]
#
#  [[ 9 10 11 12]
#   [ 5  6  7  8]]]


'''Чтобы выбрать из двумерного списка не строки, а нужные значения, то надо сделать 2 списка. В первый положить
индексы нужных строк, во второй индексы нужных элементов:'''
i0 = [0, 1]
i1 = [1, 2]
print(a[i0, i1])  # [2 7], объект np (array)

