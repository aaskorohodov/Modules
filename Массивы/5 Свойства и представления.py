import numpy as np


'''
dtype умеет как показывать тип данных, так и менять его
'''

a = np.array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])
# print(a.dtype)  # float

a.dtype = np.int32()  # меняем тип данных. Ниже меняем обратно другим способом. Данные при этом не пропадают
a.dtype = "float64"  # тут возвращается идентичный массив, без изменений относительно исходного
print(a)

print(a.size)  # количество элементов в массиве
print(a.itemsize)  # размер одного элемента в массиве

print(a.size*a.itemsize)  # так можно посмотреть размер всего массива в байтах



b = np.ones( (3, 4, 5) )
print(b)
print(b.ndim)  # покажет размерность массива (будет 3)(количество осей XYZ)
print(b.shape)  # покажет количетсво элементов по каждой оси (3 в глубь, 4 строки, 5 элементов в строке)

'''shape также умеет менять размерность:'''

b.shape = 60  # массив станет одномерным (1 строчка, 60 элементов). Кол-во элементов должно совпадать, нельзя выкинуть
b.shape = 12, 5  # станет 12х5


'''Сделаем другой массив:'''

c = b.reshape(3, 2, 10)

'''Теперь массив с стал трехмерным, состоит из элементов b, но b никуда не делся и не изменился:'''

print(c)
print(b)

'''ПРИ ЭТОМ b и с ссылаются на одни и теже данные, просто представление в переменных разное. Но данные одни в памяти.'''

b[0][0] = 10
print(c[0][0][0])