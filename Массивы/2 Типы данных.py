import numpy as np

a = np.array([1,2,3,4], 'float64')  # так указывается тип данных
print(a)

'''
НАИБОЛЕЕ ПОПУЛЯРНЫЕ ТИПЫ ДАННЫХ:

bool_
Логический тип (истина или ложь), хранящийся в виде байта.

int_
Целочисленный тип установленный по умолчанию (такой же, как C long, как правило это либо int64 либо int32).

intc
Идентичен C int (int32 или int64).

intp
Целочисленный тип, используемый для индексирования (такой же, как C ssize_t, как правило это либо int64 либо int32).

int8
Целые числа в диапазоне от -128 по 127 (числа размером 1 байт).

int16
Целые числа в диапазоне от -32768 по 32767, (числа размером 2 байта).

int32
Целые числа в диапазоне от -2147483648 по 2147483647, (числа размером 4 байта).

int64
Целые числа размером 8 байт.

uint8
Целые числа в диапазоне от 0 по 255 (числа размером 1 байт).

uint16
Целые числа в диапазоне от 0 по 65535 (числа размером 2 байта).

uint32
Целые числа в диапазоне от 0 по 4294967295 (числа размером 4 байта).

uint64
Целые беззнаковыечисла размером 8 байт.

float_
То же самое что и float64.

float16
Вещественные числа половинной точности: 1 бит знака, 5 бит экспоненты, 10 бит мантисы (числа размером 2 байта).

float32
Вещественные числа одинарной точности: 1 бит знака, 8 бит экспоненты, 23 бита мантисы (числа размером 4 байта).

float64
Вещественные числа двойной точности: 1 бит знака, 11 бит экспоненты, 52 бита мантисы (числа размером 8 байт).

complex_
То же самое что и complex128.

complex64
Комплексные числа, в которых действительная и мнимая части представлены двумя вещественными числами типа float32.

complex128
Комплексные числа, в которых действительная и мнимая части представлены двумя вещественными числами типа float64.

str_
Для представления строк
'''


'''Можно преобразовывать отдельные данные:'''

a = np.int16(10)
print(a)


'''Желательно не задавать тип данных вручную, так как это может испортить данные:'''

a = np.array([1, 2, 5000, 1000], dtype='int8')
print(a)  # числа 5000 и 1000 не влезли в 1 байт и были переписаны


'''Можно переписать тип данных для всего массива:'''

a = np.array([1, 2, 5000, 1000])
b = np.complex64(a)
print(b)