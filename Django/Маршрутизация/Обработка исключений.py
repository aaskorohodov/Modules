'''
Чтобы начать обрабатывать исключения, нужно выключить режим отладки в settings.py (DEBUG = False) и указать хост
(ALLOWED_HOSTS = [например 127.0.0.1])

Затем в корневом urls.py указывается нужная ошибка:
handler500 – ошибка сервера;
handler403 – доступ запрещен;
handler400 – невозможно обработать запрос;
handler404 – несуществующая страница.

Переменная имеет строго заданное имя, одно из приведенных выше. Ей присваивается функция обработки, которую надо звать:
handler404 = pageNotFound
Это указывается с новой строчки, а не в urlpatterns. Затем в отображении создается одноименная функция, которая нарисует
страницу 404:

def pageNotFound(request, exception):
    return HttpResponseNotFound('<h1>Страница не найдена</h1>')

Тут функция принимает еще exception, который можно посмотреть (что там случилось), а возвращается HttpResponseNotFound.

Также в любой функции отображения можно задать условие, при котором будет вызвана 404, например:
def archive(request, year):

    if(int(year) > 2020):
        raise Http404()

    return HttpResponse(f"<h1>Архив по годам</h1>{year}</p>")

Если год больше 2020, то будет вызван обработчик 404. При этом он будет вызван не из ниоткуда, его нужно задать, как
показано выше и нарисовать для него страницу. raise Http404() лишь автоматически обратится к нему.

'''